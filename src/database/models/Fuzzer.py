import re

from mongoengine import Document
from mongoengine.fields import StringField, DateTimeField, \
    BooleanField, IntField, FloatField


class Fuzzer(Document):
    # Additionally allows '.' and '@' over NAME_CHECK_REGEX.
    VALID_NAME_REGEX = re.compile(r'^[a-zA-Z0-9_@.-]+$')
    # Last update time.
    timestamp = DateTimeField()
    # Fuzzer Name.
    name = StringField(unique=True)

    # The name of the archive that the user uploaded.
    filename = StringField()

    # String representation of the file size.
    file_size = StringField()

    # Blobstore path or URL for this fuzzer.
    blobstore_path = StringField()

    # Fuzzer's main executable path, relative to root.
    executable_path = StringField()

    # Revision number of the fuzzer.
    revision = FloatField(default=1.0)

    # Testcase timeout.
    timeout = IntField()

    # Supported platforms.
    supported_platforms = StringField()

    # Custom script that should be used to launch chrome for this fuzzer.
    launcher_script = StringField()

    # Result from the last fuzzer run showing the number of testcases generated.
    result = StringField(default="")

    # Last result update timestamp.
    result_timestamp = DateTimeField(default=None)

    # Console output from last fuzzer run.
    console_output = StringField(default='')

    # Return code from last fuzzer run.
    return_code = IntField(default=0)

    # Blobstore key for the sample testcase generated by the fuzzer.
    sample_testcase = StringField(default="")

    # Max testcases to generate for this fuzzer.
    max_testcases = IntField()

    # Does it run un-trusted content ? Examples including running live sites.
    untrusted_content = BooleanField()

    # Additional environment variables that need to be set for this fuzzer.
    additional_environment_string = StringField()

    # Column specification for stats.
    stats_columns = StringField()

    # Helpful descriptions for the stats_columns. In a yaml format.
    stats_column_descriptions = StringField()

    # Whether this is a builtin fuzzer.
    builtin = BooleanField(default=False)

    # Whether this is a differential fuzzer.
    differential = BooleanField(default=False)

    # If this flag is set, fuzzer generates the testcase in the larger directory
    # on disk |FUZZ_INPUTS_DISK|, rather than smaller tmpfs one (FUZZ_INPUTS).
    has_large_testcases = BooleanField(default=False)

    # Data bundle name.
    data_bundle_name = StringField(default='')
